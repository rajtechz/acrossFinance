{"version":3,"file":"static/js/475.9f2fd538.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { getPath } from '@mui/system';\nimport { alpha } from '@mui/system/colorManipulator';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" && !invalidTemplates.has(keyframe)) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n                if (i === unresolvedKeyframes.length - 1) {\n                    this.finalKeyframe = keyframe;\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.1.9\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const props = visualElement.getProps();\n            const appearId = props[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, getClosestProjectingNode(this.parent));\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.1.9\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.1.9 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","error","_ref","theme","ownerState","transformedColor","color","transformDeprecatedColors","getPath","concat","channelColor","alpha","_excluded","LinkRoot","styled","Typography","name","overridesResolver","props","styles","root","capitalize","underline","component","button","_extends","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","React","inProps","ref","useDefaultProps","className","onBlur","onFocus","TypographyClasses","variant","sx","other","_objectWithoutPropertiesLoose","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","Object","keys","includes","Array","isArray","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","keepAlive","immediate","microtask","cancelMicrotask","queueMicrotask","isRefObject","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","mount","unmount","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","layoutId","useLayoutId","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","jsxs","Provider","value","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","paddingTop","paddingRight","paddingBottom","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","pointerType","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","isFocusVisible","matches","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}